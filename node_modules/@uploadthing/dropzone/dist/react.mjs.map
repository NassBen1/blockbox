{"version":3,"sources":["../src/react.tsx"],"sourcesContent":["/**\n * This is a forked version of the react-dropzone package, that's been minified\n * to suit UploadThing's needs and be easily portable to other frameworks than React.\n * See original source here: https://github.com/react-dropzone/react-dropzone\n * The original package is licensed under the MIT license.\n */\n\nimport type {\n  ChangeEvent,\n  DragEvent,\n  HTMLProps,\n  KeyboardEvent,\n  MouseEvent,\n} from \"react\";\nimport { useCallback, useEffect, useMemo, useReducer, useRef } from \"react\";\nimport { fromEvent } from \"file-selector\";\n\nimport {\n  acceptPropAsAcceptAttr,\n  allFilesAccepted,\n  initialState,\n  isEnterOrSpace,\n  isEventWithFiles,\n  isFileAccepted,\n  isIeOrEdge,\n  isValidQuantity,\n  isValidSize,\n  noop,\n  reducer,\n} from \"./core\";\nimport type { DropzoneOptions } from \"./types\";\n\nexport type * from \"./types\";\n\nexport type DropEvent =\n  | Event\n  | React.DragEvent<HTMLElement>\n  | React.ChangeEvent<HTMLElement>;\n\n/**\n * A React hook that creates a drag 'n' drop area.\n *\n * ### Example\n *\n * ```tsx\n * function MyDropzone() {\n *   const { getRootProps, getInputProps } = useDropzone({\n *     onDrop: acceptedFiles => {\n *       // do something with the File objects, e.g. upload to some server\n *     }\n *   });\n *\n *   return (\n *     <div {...getRootProps()}>\n *       <input {...getInputProps()} />\n *       <p>Drag and drop some files here, or click to select files</p>\n *     </div>\n *   )\n * }\n * ```\n */\nexport function useDropzone({\n  accept,\n  disabled = false,\n  maxSize = Number.POSITIVE_INFINITY,\n  minSize = 0,\n  multiple = true,\n  maxFiles = 0,\n  onDrop,\n}: DropzoneOptions) {\n  const acceptAttr = useMemo(() => acceptPropAsAcceptAttr(accept), [accept]);\n\n  const rootRef = useRef<HTMLDivElement>(null);\n  const inputRef = useRef<HTMLInputElement>(null);\n  const dragTargetsRef = useRef<EventTarget[]>([]);\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  useEffect(() => {\n    // Update file dialog active state when the window is focused on\n    const onWindowFocus = () => {\n      // Execute the timeout only if the file dialog is opened in the browser\n      if (state.isFileDialogActive) {\n        setTimeout(() => {\n          if (inputRef.current) {\n            const { files } = inputRef.current;\n\n            if (!files?.length) {\n              dispatch({ type: \"closeDialog\" });\n            }\n          }\n        }, 300);\n      }\n    };\n\n    window.addEventListener(\"focus\", onWindowFocus, false);\n    return () => {\n      window.removeEventListener(\"focus\", onWindowFocus, false);\n    };\n  }, [state.isFileDialogActive]);\n\n  useEffect(() => {\n    const onDocumentDrop = (event: DropEvent) => {\n      // If we intercepted an event for our instance, let it propagate down to the instance's onDrop handler\n      if (rootRef.current?.contains(event.target as Node)) return;\n\n      event.preventDefault();\n      dragTargetsRef.current = [];\n    };\n    const onDocumentDragOver = (e: Pick<Event, \"preventDefault\">) =>\n      e.preventDefault();\n\n    document.addEventListener(\"dragover\", onDocumentDragOver, false);\n    document.addEventListener(\"drop\", onDocumentDrop, false);\n\n    return () => {\n      document.removeEventListener(\"dragover\", onDocumentDragOver);\n      document.removeEventListener(\"drop\", onDocumentDrop);\n    };\n  }, []);\n\n  const onDragEnter = useCallback(\n    (event: DragEvent<HTMLElement>) => {\n      event.preventDefault();\n      event.persist();\n\n      dragTargetsRef.current = [...dragTargetsRef.current, event.target];\n\n      if (isEventWithFiles(event)) {\n        Promise.resolve(fromEvent(event))\n          .then((files) => {\n            if (event.isPropagationStopped()) return;\n\n            const fileCount = files.length;\n            const isDragAccept =\n              fileCount > 0 &&\n              allFilesAccepted({\n                files: files as File[],\n                accept: acceptAttr!,\n                minSize,\n                maxSize,\n                multiple,\n                maxFiles,\n              });\n            const isDragReject = fileCount > 0 && !isDragAccept;\n\n            dispatch({\n              type: \"setDraggedFiles\",\n              payload: {\n                isDragAccept,\n                isDragReject,\n                isDragActive: true,\n              },\n            });\n          })\n          .catch(noop);\n      }\n    },\n    [acceptAttr, maxFiles, maxSize, minSize, multiple],\n  );\n\n  const onDragOver = useCallback((event: DragEvent<HTMLElement>) => {\n    event.preventDefault();\n    event.persist();\n\n    const hasFiles = isEventWithFiles(event);\n    if (hasFiles && event.dataTransfer !== null) {\n      try {\n        event.dataTransfer.dropEffect = \"copy\";\n      } catch {\n        noop();\n      }\n    }\n\n    return false;\n  }, []);\n\n  const onDragLeave = useCallback((event: DragEvent<HTMLElement>) => {\n    event.preventDefault();\n    event.persist();\n\n    // Only deactivate once the dropzone and all children have been left\n    const targets = dragTargetsRef.current.filter((target) =>\n      rootRef.current?.contains(target as Node),\n    );\n\n    // Make sure to remove a target present multiple times only once\n    // (Firefox may fire dragenter/dragleave multiple times on the same element)\n    const targetIdx = targets.indexOf(event.target);\n    if (targetIdx !== -1) targets.splice(targetIdx, 1);\n    dragTargetsRef.current = targets;\n    if (targets.length > 0) return;\n\n    dispatch({\n      type: \"setDraggedFiles\",\n      payload: {\n        isDragActive: false,\n        isDragAccept: false,\n        isDragReject: false,\n      },\n    });\n  }, []);\n\n  const setFiles = useCallback(\n    (files: File[]) => {\n      const acceptedFiles: File[] = [];\n\n      files.forEach((file) => {\n        const accepted = isFileAccepted(file, acceptAttr!);\n        const sizeMatch = isValidSize(file, minSize, maxSize);\n\n        if (accepted && sizeMatch) {\n          acceptedFiles.push(file);\n        }\n      });\n\n      if (!isValidQuantity(acceptedFiles, multiple, maxFiles)) {\n        acceptedFiles.splice(0);\n      }\n\n      dispatch({\n        type: \"setFiles\",\n        payload: {\n          acceptedFiles,\n        },\n      });\n\n      onDrop(acceptedFiles);\n    },\n    [acceptAttr, maxFiles, maxSize, minSize, multiple, onDrop],\n  );\n\n  const onDropCb = useCallback(\n    (event: ChangeEvent<HTMLElement>) => {\n      event.preventDefault();\n      event.persist();\n\n      dragTargetsRef.current = [];\n\n      if (isEventWithFiles(event)) {\n        Promise.resolve(fromEvent(event))\n          .then((files) => {\n            if (event.isPropagationStopped()) return;\n            setFiles(files as File[]);\n          })\n          .catch(noop);\n      }\n      dispatch({ type: \"reset\" });\n    },\n    [setFiles],\n  );\n\n  const openFileDialog = useCallback(() => {\n    if (inputRef.current) {\n      dispatch({ type: \"openDialog\" });\n      inputRef.current.value = \"\";\n      inputRef.current.click();\n    }\n  }, []);\n\n  // Cb to open the file dialog when SPACE/ENTER occurs on the dropzone\n  const onKeyDown = useCallback(\n    (event: KeyboardEvent) => {\n      // Ignore keyboard events bubbling up the DOM tree\n      if (!rootRef.current?.isEqualNode(event.target as Node)) return;\n\n      if (isEnterOrSpace(event)) {\n        event.preventDefault();\n        openFileDialog();\n      }\n    },\n    [openFileDialog],\n  );\n\n  const onInputElementClick = useCallback((e: MouseEvent) => {\n    e.stopPropagation();\n  }, []);\n\n  // Update focus state for the dropzone\n  const onFocus = useCallback(() => dispatch({ type: \"focus\" }), []);\n  const onBlur = useCallback(() => dispatch({ type: \"blur\" }), []);\n\n  const onClick = useCallback(() => {\n    // In IE11/Edge the file-browser dialog is blocking, therefore,\n    // use setTimeout() to ensure React can handle state changes\n    isIeOrEdge() ? setTimeout(openFileDialog, 0) : openFileDialog();\n  }, [openFileDialog]);\n\n  const getRootProps = useMemo(\n    () => (): HTMLProps<HTMLDivElement> => ({\n      ref: rootRef,\n      role: \"presentation\",\n      ...(!disabled\n        ? {\n            tabIndex: 0,\n            onKeyDown,\n            onFocus,\n            onBlur,\n            onClick,\n            onDragEnter,\n            onDragOver,\n            onDragLeave,\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            onDrop: onDropCb as any,\n          }\n        : {}),\n    }),\n    [\n      disabled,\n      onBlur,\n      onClick,\n      onDragEnter,\n      onDragLeave,\n      onDragOver,\n      onDropCb,\n      onFocus,\n      onKeyDown,\n    ],\n  );\n\n  const getInputProps = useMemo(\n    () => (): HTMLProps<HTMLInputElement> => ({\n      ref: inputRef,\n      type: \"file\",\n      style: { display: \"none\" },\n      accept: acceptAttr,\n      multiple,\n      tabIndex: -1,\n      ...(!disabled\n        ? {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            onChange: onDropCb as any,\n            onClick: onInputElementClick,\n          }\n        : {}),\n    }),\n    [acceptAttr, multiple, onDropCb, onInputElementClick, disabled],\n  );\n\n  return {\n    ...state,\n    getRootProps,\n    getInputProps,\n    rootRef,\n  };\n}\n"],"mappings":"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","names":[]}