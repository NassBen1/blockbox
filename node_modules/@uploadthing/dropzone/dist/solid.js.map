{"version":3,"sources":["../src/solid.tsx","../src/core.ts"],"sourcesContent":["/**\n * This is a forked version of the react-dropzone package, that's been minified\n * to suit UploadThing's needs and be easily portable to other frameworks than React.\n * See original source here: https://github.com/react-dropzone/react-dropzone\n * The original package is licensed under the MIT license.\n */\n\nimport { fromEvent } from \"file-selector\";\nimport {\n  createEffect,\n  createMemo,\n  createSignal,\n  mergeProps,\n  onCleanup,\n} from \"solid-js\";\nimport { createStore } from \"solid-js/store\";\n\nimport {\n  acceptPropAsAcceptAttr,\n  allFilesAccepted,\n  initialState,\n  isEnterOrSpace,\n  isEventWithFiles,\n  isFileAccepted,\n  isIeOrEdge,\n  isValidQuantity,\n  isValidSize,\n  noop,\n} from \"./core\";\nimport type { DropzoneOptions } from \"./types\";\n\nexport type * from \"./types\";\n\nexport type DropEvent = InputEvent | DragEvent | Event;\n\nexport function createDropzone(_props: DropzoneOptions) {\n  const props = mergeProps(\n    {\n      disabled: false,\n      maxSize: Number.POSITIVE_INFINITY,\n      minSize: 0,\n      multiple: true,\n      maxFiles: 0,\n    },\n    _props,\n  );\n\n  const acceptAttr = createMemo(() => acceptPropAsAcceptAttr(props.accept));\n\n  const [rootRef, setRootRef] = createSignal<HTMLElement | null>();\n  const [inputRef, setInputRef] = createSignal<HTMLInputElement | null>();\n  let dragTargets: HTMLElement[] = [];\n\n  const [state, setState] = createStore(initialState);\n\n  createEffect(() => {\n    const onWindowFocus = () => {\n      if (state.isFileDialogActive) {\n        setTimeout(() => {\n          const input = inputRef();\n          if (input) {\n            const { files } = input;\n\n            if (!files?.length) {\n              setState(\"isFileDialogActive\", false);\n            }\n          }\n        }, 300);\n      }\n    };\n\n    window.addEventListener(\"focus\", onWindowFocus, false);\n    onCleanup(() => {\n      window.removeEventListener(\"focus\", onWindowFocus, false);\n    });\n  });\n\n  createEffect(() => {\n    const onDocumentDrop = (event: DropEvent) => {\n      const root = rootRef();\n      if (root && root.contains(event.target as Node)) {\n        // If we intercepted an event for our instance, let it propagate down to the instance's onDrop handler\n        return;\n      }\n      event.preventDefault();\n      dragTargets = [];\n    };\n\n    const onDocumentDragOver = (e: Pick<Event, \"preventDefault\">) =>\n      e.preventDefault();\n\n    document.addEventListener(\"dragover\", onDocumentDragOver, false);\n    document.addEventListener(\"drop\", onDocumentDrop, false);\n\n    onCleanup(() => {\n      document.removeEventListener(\"dragover\", onDocumentDragOver, false);\n      document.removeEventListener(\"drop\", onDocumentDrop, false);\n    });\n  });\n\n  function isPropagationStopped(event: Event) {\n    if (typeof event.cancelBubble !== \"undefined\") {\n      return event.cancelBubble;\n    }\n    return false;\n  }\n\n  const onDragEnter = (event: DragEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    dragTargets = [...dragTargets, event.target as HTMLElement];\n\n    if (isEventWithFiles(event)) {\n      Promise.resolve(fromEvent(event))\n        .then((files) => {\n          if (isPropagationStopped(event)) return;\n\n          const fileCount = files.length;\n          const isDragAccept =\n            fileCount > 0 &&\n            allFilesAccepted({\n              files: files as File[],\n              accept: acceptAttr()!,\n              minSize: props.minSize,\n              maxSize: props.maxSize,\n              multiple: props.multiple,\n              maxFiles: props.maxFiles,\n            });\n          const isDragReject = fileCount > 0 && !isDragAccept;\n\n          setState({\n            isDragAccept,\n            isDragReject,\n            isDragActive: true,\n          });\n        })\n        .catch(noop);\n    }\n  };\n\n  const onDragOver = (event: DragEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const hasFiles = isEventWithFiles(event);\n    if (hasFiles && event.dataTransfer) {\n      try {\n        event.dataTransfer.dropEffect = \"copy\";\n      } catch {\n        noop();\n      }\n    }\n\n    return false;\n  };\n\n  const onDragLeave = (event: DragEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const root = rootRef();\n    // Only deactivate once the dropzone and all children have been left\n    const targets = dragTargets.filter((target) => root?.contains(target));\n    // Make sure to remove a target present multiple times only once\n    // (Firefox may fire dragenter/dragleave multiple times on the same element)\n    const targetIdx = targets.indexOf(event.target as HTMLElement);\n    if (targetIdx !== -1) {\n      targets.splice(targetIdx, 1);\n    }\n    dragTargets = targets;\n    if (targets.length > 0) {\n      return;\n    }\n\n    setState({\n      isDragActive: false,\n      isDragAccept: false,\n      isDragReject: false,\n    });\n  };\n\n  const setFiles = (files: File[]) => {\n    const acceptedFiles: File[] = [];\n\n    files.forEach((file) => {\n      const accepted = isFileAccepted(file, acceptAttr()!);\n      const sizeMatch = isValidSize(file, props.minSize, props.maxSize);\n\n      if (accepted && sizeMatch) {\n        acceptedFiles.push(file);\n      }\n    });\n\n    if (isValidQuantity(acceptedFiles, props.multiple, props.maxFiles)) {\n      acceptedFiles.splice(0);\n    }\n\n    setState({\n      acceptedFiles,\n    });\n\n    props.onDrop?.(acceptedFiles);\n  };\n\n  const onDrop = (event: DropEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    dragTargets = [];\n\n    if (isEventWithFiles(event)) {\n      Promise.resolve(fromEvent(event))\n        .then((files) => {\n          if (isPropagationStopped(event)) {\n            return;\n          }\n          setFiles(files as File[]);\n        })\n        .catch(noop);\n    }\n\n    setState(initialState);\n  };\n\n  const openFileDialog = () => {\n    const input = inputRef();\n    if (input) {\n      setState(\"isFileDialogActive\", true);\n      input.value = \"\";\n      input.click();\n    }\n  };\n\n  const onKeyDown = (event: KeyboardEvent) => {\n    // Ignore keyboard events bubbling up the DOM tree\n    const root = rootRef();\n    if (!root || !root.isEqualNode(event.target as Node)) {\n      return;\n    }\n\n    if (isEnterOrSpace(event)) {\n      event.preventDefault();\n      openFileDialog();\n    }\n  };\n\n  const onInputElementClick = (event: MouseEvent) => {\n    event.stopPropagation();\n  };\n\n  const onFocus = () => setState(\"isFocused\", true);\n  const onBlur = () => setState(\"isFocused\", false);\n  const onClick = () => () => {\n    // In IE11/Edge the file-browser dialog is blocking, therefore, use setTimeout()\n    // to ensure React can handle state changes\n    // See: https://github.com/react-dropzone/react-dropzone/issues/450\n    isIeOrEdge() ? setTimeout(openFileDialog, 0) : openFileDialog();\n  };\n\n  const getRootProps = () => ({\n    ref: setRootRef,\n    role: \"presentation\" as const,\n    ...(!props.disabled\n      ? {\n          tabIndex: 0,\n          onKeyDown,\n          onFocus,\n          onBlur,\n          onClick,\n          onDragEnter,\n          onDragOver,\n          onDragLeave,\n          onDrop,\n        }\n      : {}),\n  });\n\n  const getInputProps = () => ({\n    ref: setInputRef,\n    type: \"file\",\n    style: { display: \"none\" },\n    accept: acceptAttr(),\n    multiple: props.multiple,\n    tabIndex: -1,\n    ...(!props.disabled\n      ? {\n          onChange: onDrop,\n          onClick: onInputElementClick,\n        }\n      : {}),\n  });\n\n  return mergeProps(state, {\n    getInputProps,\n    getRootProps,\n    rootRef: setRootRef,\n    inputRef: setInputRef,\n  });\n}\n","/**\n * This is a forked version of the react-dropzone package, that's been minified\n * to suit UploadThing's needs and be easily portable to other frameworks than React.\n * See original source here: https://github.com/react-dropzone/react-dropzone\n * The original package is licensed under the MIT license.\n */\n\nimport attrAccepts from \"attr-accept\";\n\nimport type { AcceptProp, DropzoneState } from \"./types\";\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\nconst accepts: typeof attrAccepts =\n  // @ts-expect-error - ESM interop\n  typeof attrAccepts === \"function\" ? attrAccepts : attrAccepts.default;\n\n// Firefox versions prior to 53 return a bogus MIME type for every file drag, so dragovers with\n// that MIME type will always be accepted\nexport function isFileAccepted(file: File, accept: string | string[]) {\n  return file.type === \"application/x-moz-file\" || accepts(file, accept);\n}\n\nexport function isEnterOrSpace(event: { key?: string; keyCode?: number }) {\n  return (\n    (\"key\" in event && (event.key === \" \" || event.key === \"Enter\")) ||\n    (\"keyCode\" in event && (event.keyCode === 32 || event.keyCode === 13))\n  );\n}\n\nconst isDefined = <T>(v: T | null | undefined): v is T => v != null;\nexport function isValidSize(file: File, minSize: number, maxSize: number) {\n  if (!isDefined(file.size)) return true;\n  if (isDefined(minSize) && isDefined(maxSize)) {\n    return file.size >= minSize && file.size <= maxSize;\n  }\n  if (isDefined(minSize) && file.size < minSize) return false;\n  if (isDefined(maxSize) && file.size > maxSize) return false;\n  return true;\n}\n\nexport function isValidQuantity(\n  files: File[],\n  multiple: boolean,\n  maxFiles: number,\n) {\n  if (!multiple && files.length > 1) return false;\n  if (multiple && maxFiles >= 1 && files.length > maxFiles) return false;\n  return true;\n}\n\nexport function allFilesAccepted({\n  files,\n  accept,\n  minSize,\n  maxSize,\n  multiple,\n  maxFiles,\n}: {\n  files: File[];\n  accept: string | string[];\n  minSize: number;\n  maxSize: number;\n  multiple: boolean;\n  maxFiles: number;\n}) {\n  if (!isValidQuantity(files, multiple, maxFiles)) return false;\n\n  return files.every(\n    (file) =>\n      isFileAccepted(file, accept) && isValidSize(file, minSize, maxSize),\n  );\n}\n\nexport function isEventWithFiles(event: Partial<Event>) {\n  if (!(\"dataTransfer\" in event && event.dataTransfer !== null)) {\n    return !!event.target && \"files\" in event.target && !!event.target.files;\n  }\n  // https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer/types\n  // https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Recommended_drag_types#file\n  return Array.prototype.some.call(\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    (event.dataTransfer as any)?.types,\n    (type) => type === \"Files\" || type === \"application/x-moz-file\",\n  );\n}\n\nexport function isIeOrEdge(ua = window.navigator.userAgent) {\n  return (\n    ua.indexOf(\"MSIE \") > -1 ||\n    ua.indexOf(\"Trident/\") > -1 ||\n    ua.indexOf(\"Edge/\") > -1\n  );\n}\n\nfunction isMIMEType(v: string) {\n  return (\n    v === \"audio/*\" ||\n    v === \"video/*\" ||\n    v === \"image/*\" ||\n    v === \"text/*\" ||\n    /\\w+\\/[-+.\\w]+/g.test(v)\n  );\n}\n\nfunction isExt(v: string) {\n  return /^.*\\.[\\w]+$/.test(v);\n}\n\n/**\n * Convert the `{accept}` dropzone prop to an array of MIME types/extensions.\n */\nexport function acceptPropAsAcceptAttr(accept?: AcceptProp) {\n  if (isDefined(accept)) {\n    return (\n      Object.entries(accept)\n        .reduce<string[]>((a, [mimeType, ext]) => [...a, mimeType, ...ext], [])\n        // Silently discard invalid entries as pickerOptionsFromAccept warns about these\n        .filter((v) => isMIMEType(v) || isExt(v))\n        .join(\",\")\n    );\n  }\n\n  return undefined;\n}\n\nexport function noop() {\n  // noop\n}\n\n/**\n * ================================================\n *                    Reducer\n * ================================================\n */\ntype Payload<T extends keyof DropzoneState> = Pick<DropzoneState, T>;\n\ntype Focus = { type: \"focus\" };\ntype Blur = { type: \"blur\" };\ntype OpenDialog = { type: \"openDialog\" };\ntype CloseDialog = { type: \"closeDialog\" };\ntype SetDraggedFiles = {\n  type: \"setDraggedFiles\";\n  payload: Payload<\"isDragActive\" | \"isDragAccept\" | \"isDragReject\">;\n};\ntype SetFiles = { type: \"setFiles\"; payload: Payload<\"acceptedFiles\"> };\ntype Reset = { type: \"reset\" };\ntype DropzoneActions =\n  | Focus\n  | Blur\n  | OpenDialog\n  | CloseDialog\n  | SetDraggedFiles\n  | SetFiles\n  | Reset;\n\nexport const initialState = {\n  isFocused: false,\n  isFileDialogActive: false,\n  isDragActive: false,\n  isDragAccept: false,\n  isDragReject: false,\n  acceptedFiles: [] as File[],\n};\n\nexport function reducer(\n  state: DropzoneState,\n  action: DropzoneActions,\n): DropzoneState {\n  switch (action.type) {\n    case \"focus\":\n      return {\n        ...state,\n        isFocused: true,\n      };\n    case \"blur\":\n      return {\n        ...state,\n        isFocused: false,\n      };\n    case \"openDialog\":\n      return {\n        ...initialState,\n        isFileDialogActive: true,\n      };\n    case \"closeDialog\":\n      return {\n        ...state,\n        isFileDialogActive: false,\n      };\n    case \"setDraggedFiles\":\n      return {\n        ...state,\n        ...action.payload,\n      };\n    case \"setFiles\":\n      return {\n        ...state,\n        ...action.payload,\n      };\n    case \"reset\":\n      return initialState;\n    default:\n      return state;\n  }\n}\n"],"mappings":"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","names":["attrAccepts"]}