import type { ComponentProps, JSXElementConstructor } from "react";
import type { FileRouter } from "uploadthing/server";
import type { GenerateTypedHelpersOptions } from "../types";
import { UploadButton } from "./button";
import { UploadDropzone } from "./dropzone";
import { Uploader } from "./uploader";
export { UploadButton, UploadDropzone, Uploader };
type OmitInitOpts<T extends keyof JSX.IntrinsicElements | JSXElementConstructor<any>> = Omit<ComponentProps<T>, keyof GenerateTypedHelpersOptions>;
export declare const generateUploadButton: <TRouter extends FileRouter>(opts?: GenerateTypedHelpersOptions) => <TEndpoint extends keyof TRouter>(props: OmitInitOpts<(props: FileRouter extends TRouter ? "You forgot to pass the generic" : import("./button").UploadButtonProps<TRouter, TEndpoint>) => import("react/jsx-runtime").JSX.Element>) => import("react/jsx-runtime").JSX.Element;
export declare const generateUploadDropzone: <TRouter extends FileRouter>(opts?: GenerateTypedHelpersOptions) => <TEndpoint extends keyof TRouter>(props: OmitInitOpts<(props: FileRouter extends TRouter ? "You forgot to pass the generic" : import("./dropzone").UploadDropzoneProps<TRouter, TEndpoint>) => import("react/jsx-runtime").JSX.Element>) => import("react/jsx-runtime").JSX.Element;
export declare const generateUploader: <TRouter extends FileRouter>(opts?: GenerateTypedHelpersOptions) => <TEndpoint extends keyof TRouter>(props: OmitInitOpts<(props: FileRouter extends TRouter ? "You forgot to pass the generic" : import("../types").UploadthingComponentProps<TRouter, TEndpoint>) => import("react/jsx-runtime").JSX.Element>) => import("react/jsx-runtime").JSX.Element;
/**
 * @deprecated - use {@link generateUploadButton}, {@link generateUploadDropzone}, and {@link generateUploader} instead
 */
export declare function generateComponents<TRouter extends FileRouter>(initOpts?: GenerateTypedHelpersOptions): {
    UploadButton: <TEndpoint extends keyof TRouter>(props: OmitInitOpts<(props: FileRouter extends TRouter ? "You forgot to pass the generic" : import("./button").UploadButtonProps<TRouter, TEndpoint>) => import("react/jsx-runtime").JSX.Element>) => import("react/jsx-runtime").JSX.Element;
    UploadDropzone: <TEndpoint_2 extends keyof TRouter>(props: OmitInitOpts<(props: FileRouter extends TRouter ? "You forgot to pass the generic" : import("./dropzone").UploadDropzoneProps<TRouter, TEndpoint_2>) => import("react/jsx-runtime").JSX.Element>) => import("react/jsx-runtime").JSX.Element;
    Uploader: <TEndpoint_4 extends keyof TRouter>(props: OmitInitOpts<(props: FileRouter extends TRouter ? "You forgot to pass the generic" : import("../types").UploadthingComponentProps<TRouter, TEndpoint_4>) => import("react/jsx-runtime").JSX.Element>) => import("react/jsx-runtime").JSX.Element;
};
//# sourceMappingURL=index.d.ts.map