{"version":3,"sources":["../src/index.ts","../src/components/index.tsx","../src/components/button.tsx","../src/useUploadThing.ts","../src/utils/useEvent.ts","../src/utils/useFetch.ts","../src/components/shared.tsx","../src/components/dropzone.tsx","../src/components/uploader.tsx"],"sourcesContent":["import \"./styles.css\";\n\nexport {\n  UploadButton,\n  UploadDropzone,\n  Uploader,\n  generateUploadButton,\n  generateUploadDropzone,\n  generateUploader,\n  generateComponents,\n} from \"./components\";\n\nexport { generateReactHelpers } from \"./useUploadThing\";\n\nexport type * from \"./types\";\n\nexport { useDropzone } from \"@uploadthing/dropzone/react\";\nexport type * from \"@uploadthing/dropzone/react\";\n","import type { ComponentProps, JSXElementConstructor } from \"react\";\n\nimport { resolveMaybeUrlArg } from \"uploadthing/client\";\nimport type { FileRouter } from \"uploadthing/server\";\n\nimport type { GenerateTypedHelpersOptions } from \"../types\";\nimport { UploadButton } from \"./button\";\nimport { UploadDropzone } from \"./dropzone\";\nimport { Uploader } from \"./uploader\";\n\nexport { UploadButton, UploadDropzone, Uploader };\n\ntype OmitInitOpts<\n  T extends keyof JSX.IntrinsicElements | JSXElementConstructor<any>,\n> = Omit<ComponentProps<T>, keyof GenerateTypedHelpersOptions>;\n\nexport const generateUploadButton = <TRouter extends FileRouter>(\n  opts?: GenerateTypedHelpersOptions,\n) => {\n  const url = resolveMaybeUrlArg(opts?.url);\n\n  const TypedButton = <TEndpoint extends keyof TRouter>(\n    props: OmitInitOpts<typeof UploadButton<TRouter, TEndpoint>>,\n  ) => <UploadButton<TRouter, TEndpoint> {...(props as any)} url={url} />;\n  return TypedButton;\n};\n\nexport const generateUploadDropzone = <TRouter extends FileRouter>(\n  opts?: GenerateTypedHelpersOptions,\n) => {\n  const url = resolveMaybeUrlArg(opts?.url);\n\n  const TypedDropzone = <TEndpoint extends keyof TRouter>(\n    props: OmitInitOpts<typeof UploadDropzone<TRouter, TEndpoint>>,\n  ) => <UploadDropzone<TRouter, TEndpoint> {...(props as any)} url={url} />;\n  return TypedDropzone;\n};\n\nexport const generateUploader = <TRouter extends FileRouter>(\n  opts?: GenerateTypedHelpersOptions,\n) => {\n  const url = resolveMaybeUrlArg(opts?.url);\n\n  const TypedUploader = <TEndpoint extends keyof TRouter>(\n    props: OmitInitOpts<typeof Uploader<TRouter, TEndpoint>>,\n  ) => <Uploader<TRouter, TEndpoint> {...(props as any)} url={url} />;\n  return TypedUploader;\n};\n\n/**\n * @deprecated - use {@link generateUploadButton}, {@link generateUploadDropzone}, and {@link generateUploader} instead\n */\nexport function generateComponents<TRouter extends FileRouter>(\n  initOpts?: GenerateTypedHelpersOptions,\n) {\n  return {\n    UploadButton: generateUploadButton<TRouter>(initOpts),\n    UploadDropzone: generateUploadDropzone<TRouter>(initOpts),\n    Uploader: generateUploader<TRouter>(initOpts),\n  };\n}\n","import { useEffect, useRef, useState } from \"react\";\nimport { twMerge } from \"tailwind-merge\";\n\nimport {\n  allowedContentTextLabelGenerator,\n  contentFieldToContent,\n  generateMimeTypes,\n  generatePermittedFileTypes,\n  resolveMaybeUrlArg,\n  styleFieldToClassName,\n  styleFieldToCssObject,\n} from \"uploadthing/client\";\nimport type { ContentField, StyleField } from \"uploadthing/client\";\nimport type { ErrorMessage, FileRouter } from \"uploadthing/server\";\n\nimport type { UploadthingComponentProps } from \"../types\";\nimport { INTERNAL_uploadthingHookGen } from \"../useUploadThing\";\nimport { getFilesFromClipboardEvent, progressWidths, Spinner } from \"./shared\";\n\ntype ButtonStyleFieldCallbackArgs = {\n  __runtime: \"react\";\n  ready: boolean;\n  isUploading: boolean;\n  uploadProgress: number;\n  fileTypes: string[];\n};\n\nexport type UploadButtonProps<\n  TRouter extends FileRouter,\n  TEndpoint extends keyof TRouter,\n> = UploadthingComponentProps<TRouter, TEndpoint> & {\n  appearance?: {\n    container?: StyleField<ButtonStyleFieldCallbackArgs>;\n    button?: StyleField<ButtonStyleFieldCallbackArgs>;\n    allowedContent?: StyleField<ButtonStyleFieldCallbackArgs>;\n    clearBtn?: StyleField<ButtonStyleFieldCallbackArgs>;\n  };\n  content?: {\n    button?: ContentField<ButtonStyleFieldCallbackArgs>;\n    allowedContent?: ContentField<ButtonStyleFieldCallbackArgs>;\n    clearBtn?: ContentField<ButtonStyleFieldCallbackArgs>;\n  };\n  className?: string;\n};\n\n/**\n * @example\n * <UploadButton<OurFileRouter>\n *   endpoint=\"someEndpoint\"\n *   onUploadComplete={(res) => console.log(res)}\n *   onUploadError={(err) => console.log(err)}\n * />\n */\nexport function UploadButton<\n  TRouter extends FileRouter,\n  TEndpoint extends keyof TRouter,\n>(\n  props: FileRouter extends TRouter\n    ? ErrorMessage<\"You forgot to pass the generic\">\n    : UploadButtonProps<TRouter, TEndpoint>,\n) {\n  // Cast back to UploadthingComponentProps<TRouter> to get the correct type\n  // since the ErrorMessage messes it up otherwise\n  const $props = props as unknown as UploadButtonProps<TRouter, TEndpoint> & {\n    // props not exposed on public type\n    // Allow to set internal state for testing\n    __internal_state?: \"readying\" | \"ready\" | \"uploading\";\n    // Allow to set upload progress for testing\n    __internal_upload_progress?: number;\n    // Allow to set ready explicitly and independently of internal state\n    __internal_ready?: boolean;\n    // Allow to disable the button\n    __internal_button_disabled?: boolean;\n  };\n\n  const { mode = \"auto\", appendOnPaste = false } = $props.config ?? {};\n\n  const useUploadThing = INTERNAL_uploadthingHookGen<TRouter>({\n    url: resolveMaybeUrlArg($props.url),\n  });\n\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const labelRef = useRef<HTMLLabelElement>(null);\n  const [uploadProgressState, setUploadProgress] = useState(\n    $props.__internal_upload_progress ?? 0,\n  );\n  const [files, setFiles] = useState<File[]>([]);\n  const [isManualTriggerDisplayed, setIsManualTriggerDisplayed] =\n    useState(false);\n  const uploadProgress =\n    $props.__internal_upload_progress ?? uploadProgressState;\n\n  const { startUpload, isUploading, permittedFileInfo } = useUploadThing(\n    $props.endpoint,\n    {\n      onClientUploadComplete: (res) => {\n        if (fileInputRef.current) {\n          fileInputRef.current.value = \"\";\n        }\n        setIsManualTriggerDisplayed(false);\n        setFiles([]);\n        $props.onClientUploadComplete?.(res);\n        setUploadProgress(0);\n      },\n      onUploadProgress: (p) => {\n        setUploadProgress(p);\n        $props.onUploadProgress?.(p);\n      },\n      onUploadError: $props.onUploadError,\n      onUploadBegin: $props.onUploadBegin,\n      onBeforeUploadBegin: $props.onBeforeUploadBegin,\n    },\n  );\n\n  const { fileTypes, multiple } = generatePermittedFileTypes(\n    permittedFileInfo?.config,\n  );\n\n  const ready =\n    $props.__internal_ready ??\n    ($props.__internal_state === \"ready\" || fileTypes.length > 0);\n\n  useEffect(() => {\n    const handlePaste = (event: ClipboardEvent) => {\n      if (!appendOnPaste) return;\n      if (document.activeElement !== labelRef.current) return;\n\n      const pastedFiles = getFilesFromClipboardEvent(event);\n      if (!pastedFiles) return;\n\n      setFiles((prev) => [...prev, ...pastedFiles]);\n\n      if (mode === \"auto\") {\n        const input = \"input\" in $props ? $props.input : undefined;\n        void startUpload(files, input);\n      }\n    };\n\n    window.addEventListener(\"paste\", handlePaste);\n    return () => {\n      window.removeEventListener(\"paste\", handlePaste);\n    };\n  }, [startUpload, appendOnPaste, $props, files, mode, fileTypes]);\n\n  const getUploadButtonText = (fileTypes: string[]) => {\n    if (isManualTriggerDisplayed)\n      return `Upload ${files.length} file${files.length === 1 ? \"\" : \"s\"}`;\n    if (fileTypes.length === 0) return \"Loading...\";\n    return `Choose File${multiple ? `(s)` : ``}`;\n  };\n\n  const getUploadButtonContents = (fileTypes: string[]) => {\n    if (state !== \"uploading\") {\n      return getUploadButtonText(fileTypes);\n    }\n    if (uploadProgress === 100) {\n      return <Spinner />;\n    }\n    return `${uploadProgress}%`;\n  };\n\n  const getInputProps = () => ({\n    type: \"file\",\n    ref: fileInputRef,\n    multiple,\n    accept: generateMimeTypes(fileTypes ?? [])?.join(\", \"),\n    onChange: (e: React.ChangeEvent<HTMLInputElement>) => {\n      if (!e.target.files) return;\n      const selectedFiles = Array.from(e.target.files);\n\n      if (mode === \"manual\") {\n        setFiles(selectedFiles);\n        setIsManualTriggerDisplayed(true);\n        return;\n      }\n\n      const input = \"input\" in $props ? $props.input : undefined;\n      void startUpload(selectedFiles, input);\n    },\n    disabled: $props.__internal_button_disabled ?? !ready,\n    ...(!($props.__internal_button_disabled ?? !ready) ? { tabIndex: 0 } : {}),\n  });\n\n  const styleFieldArg = {\n    ready: ready,\n    isUploading: $props.__internal_state === \"uploading\" || isUploading,\n    uploadProgress,\n    fileTypes,\n  } as ButtonStyleFieldCallbackArgs;\n\n  const state = (() => {\n    if ($props.__internal_state) return $props.__internal_state;\n    if (!ready) return \"readying\";\n    if (ready && !isUploading) return \"ready\";\n\n    return \"uploading\";\n  })();\n\n  const renderClearButton = () => (\n    <button\n      onClick={() => {\n        setFiles([]);\n        setIsManualTriggerDisplayed(false);\n\n        if (fileInputRef.current) {\n          fileInputRef.current.value = \"\";\n        }\n      }}\n      className={twMerge(\n        \"h-[1.25rem] cursor-pointer rounded border-none bg-transparent text-gray-500 transition-colors hover:bg-slate-200 hover:text-gray-600\",\n        styleFieldToClassName($props.appearance?.clearBtn, styleFieldArg),\n      )}\n      style={styleFieldToCssObject($props.appearance?.clearBtn, styleFieldArg)}\n      data-state={state}\n      data-ut-element=\"clear-btn\"\n    >\n      {contentFieldToContent($props.content?.clearBtn, styleFieldArg) ??\n        \"Clear\"}\n    </button>\n  );\n\n  const renderAllowedContent = () => (\n    <div\n      className={twMerge(\n        \"h-[1.25rem]  text-xs leading-5 text-gray-600\",\n        styleFieldToClassName($props.appearance?.allowedContent, styleFieldArg),\n      )}\n      style={styleFieldToCssObject(\n        $props.appearance?.allowedContent,\n        styleFieldArg,\n      )}\n      data-state={state}\n      data-ut-element=\"allowed-content\"\n    >\n      {contentFieldToContent($props.content?.allowedContent, styleFieldArg) ??\n        allowedContentTextLabelGenerator(permittedFileInfo?.config)}\n    </div>\n  );\n\n  return (\n    <div\n      className={twMerge(\n        \"flex flex-col items-center justify-center gap-1\",\n        $props.className,\n        styleFieldToClassName($props.appearance?.container, styleFieldArg),\n      )}\n      style={styleFieldToCssObject($props.appearance?.container, styleFieldArg)}\n      data-state={state}\n    >\n      <label\n        className={twMerge(\n          \"relative flex h-10 w-36 cursor-pointer items-center justify-center overflow-hidden rounded-md text-white after:transition-[width] after:duration-500 focus-within:ring-2 focus-within:ring-blue-600 focus-within:ring-offset-2\",\n          state === \"readying\" && \"cursor-not-allowed bg-blue-400\",\n          state === \"uploading\" &&\n            `bg-blue-400 after:absolute after:left-0 after:h-full after:bg-blue-600 after:content-[''] ${progressWidths[uploadProgress]}`,\n          state === \"ready\" && \"bg-blue-600\",\n          styleFieldToClassName($props.appearance?.button, styleFieldArg),\n        )}\n        style={styleFieldToCssObject($props.appearance?.button, styleFieldArg)}\n        data-state={state}\n        data-ut-element=\"button\"\n        tabIndex={0}\n        ref={labelRef}\n        onClick={(e) => {\n          if (isManualTriggerDisplayed) {\n            e.preventDefault();\n            e.stopPropagation();\n            const input = \"input\" in $props ? $props.input : undefined;\n            void startUpload(files, input);\n          }\n        }}\n      >\n        <input {...getInputProps()} className=\"sr-only\" />\n        {contentFieldToContent($props.content?.button, styleFieldArg) ??\n          getUploadButtonContents(fileTypes)}\n      </label>\n      {mode === \"manual\" && files.length > 0\n        ? renderClearButton()\n        : renderAllowedContent()}\n    </div>\n  );\n}\n","import { useRef, useState } from \"react\";\n\nimport type { EndpointMetadata } from \"@uploadthing/shared\";\nimport { UploadThingError } from \"@uploadthing/shared\";\nimport {\n  DANGEROUS__uploadFiles,\n  INTERNAL_DO_NOT_USE__fatalClientError,\n  resolveMaybeUrlArg,\n} from \"uploadthing/client\";\nimport type {\n  DistributiveOmit,\n  FileRouter,\n  inferEndpointInput,\n  inferErrorShape,\n} from \"uploadthing/server\";\n\nimport type { GenerateTypedHelpersOptions, UseUploadthingProps } from \"./types\";\nimport { useEvent } from \"./utils/useEvent\";\nimport useFetch from \"./utils/useFetch\";\n\ndeclare const globalThis: {\n  __UPLOADTHING?: EndpointMetadata;\n};\n\nconst useEndpointMetadata = (url: URL, endpoint: string) => {\n  const maybeServerData = globalThis.__UPLOADTHING;\n  const { data } = useFetch<EndpointMetadata>(\n    // Don't fetch if we already have the data\n    maybeServerData ? undefined : url.href,\n  );\n  return (maybeServerData ?? data)?.find((x) => x.slug === endpoint);\n};\n\nexport const INTERNAL_uploadthingHookGen = <\n  TRouter extends FileRouter,\n>(initOpts: {\n  /**\n   * URL to the UploadThing API endpoint\n   * @example URL { http://localhost:3000/api/uploadthing }\n   * @example URL { https://www.example.com/api/uploadthing }\n   */\n  url: URL;\n}) => {\n  const useUploadThing = <TEndpoint extends keyof TRouter>(\n    endpoint: TEndpoint,\n    opts?: UseUploadthingProps<TRouter, TEndpoint>,\n  ) => {\n    const [isUploading, setUploading] = useState(false);\n    const uploadProgress = useRef(0);\n    const fileProgress = useRef<Map<string, number>>(new Map());\n\n    const permittedFileInfo = useEndpointMetadata(\n      initOpts.url,\n      endpoint as string,\n    );\n\n    type InferredInput = inferEndpointInput<TRouter[typeof endpoint]>;\n    type FuncInput = undefined extends InferredInput\n      ? [files: File[], input?: undefined]\n      : [files: File[], input: InferredInput];\n\n    const startUpload = useEvent(async (...args: FuncInput) => {\n      const files = (await opts?.onBeforeUploadBegin?.(args[0])) ?? args[0];\n      const input = args[1];\n\n      setUploading(true);\n      opts?.onUploadProgress?.(0);\n      try {\n        const res = await DANGEROUS__uploadFiles<TRouter, TEndpoint>(endpoint, {\n          files,\n          input,\n          onUploadProgress: (progress) => {\n            if (!opts?.onUploadProgress) return;\n            fileProgress.current.set(progress.file, progress.progress);\n            let sum = 0;\n            fileProgress.current.forEach((p) => {\n              sum += p;\n            });\n            const averageProgress =\n              Math.floor(sum / fileProgress.current.size / 10) * 10;\n            if (averageProgress !== uploadProgress.current) {\n              opts?.onUploadProgress?.(averageProgress);\n              uploadProgress.current = averageProgress;\n            }\n          },\n          onUploadBegin({ file }) {\n            if (!opts?.onUploadBegin) return;\n\n            opts.onUploadBegin(file);\n          },\n          url: initOpts.url,\n          package: \"@uploadthing/react\",\n        });\n\n        opts?.onClientUploadComplete?.(res);\n        return res;\n      } catch (e) {\n        let error: UploadThingError<inferErrorShape<TRouter>>;\n        if (e instanceof UploadThingError) {\n          error = e as UploadThingError<inferErrorShape<TRouter>>;\n        } else {\n          error = INTERNAL_DO_NOT_USE__fatalClientError(e as Error);\n          console.error(\n            \"Something went wrong. Please contact UploadThing and provide the following cause:\",\n            error.cause instanceof Error ? error.cause.toString() : error.cause,\n          );\n        }\n        opts?.onUploadError?.(error);\n      } finally {\n        setUploading(false);\n        fileProgress.current = new Map();\n        uploadProgress.current = 0;\n      }\n    });\n\n    return {\n      startUpload,\n      isUploading,\n      permittedFileInfo,\n    } as const;\n  };\n\n  return useUploadThing;\n};\n\nexport const generateReactHelpers = <TRouter extends FileRouter>(\n  initOpts?: GenerateTypedHelpersOptions,\n) => {\n  const url = resolveMaybeUrlArg(initOpts?.url);\n\n  return {\n    useUploadThing: INTERNAL_uploadthingHookGen<TRouter>({ url }),\n    uploadFiles: <TEndpoint extends keyof TRouter>(\n      endpoint: TEndpoint,\n      opts: DistributiveOmit<\n        Parameters<typeof DANGEROUS__uploadFiles<TRouter, TEndpoint>>[1],\n        \"url\"\n      >,\n    ) =>\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n      DANGEROUS__uploadFiles<TRouter, TEndpoint>(endpoint, {\n        ...opts,\n        url,\n        package: \"@uploadthing/react\",\n      } as any),\n  } as const;\n};\n","// Ripped from https://github.com/scottrippey/react-use-event-hook\nimport React from \"react\";\n\ntype AnyFunction = (...args: any[]) => any;\nconst noop = () => void 0;\n\n/**\n * Suppress the warning when using useLayoutEffect with SSR. (https://reactjs.org/link/uselayouteffect-ssr)\n * Make use of useInsertionEffect if available.\n */\nconst useInsertionEffect =\n  typeof window !== \"undefined\"\n    ? // useInsertionEffect is available in React 18+\n      React.useInsertionEffect || React.useLayoutEffect\n    : noop;\n\n/**\n * Similar to useCallback, with a few subtle differences:\n * - The returned function is a stable reference, and will always be the same between renders\n * - No dependency lists required\n * - Properties or state accessed within the callback will always be \"current\"\n */\nexport function useEvent<TCallback extends AnyFunction>(\n  callback: TCallback,\n): TCallback {\n  // Keep track of the latest callback:\n  const latestRef = React.useRef<TCallback>(\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n    useEvent_shouldNotBeInvokedBeforeMount as any,\n  );\n  useInsertionEffect(() => {\n    latestRef.current = callback;\n  }, [callback]);\n\n  // Create a stable callback that always calls the latest callback:\n  // using useRef instead of useCallback avoids creating and empty array on every render\n  const stableRef = React.useRef<TCallback>();\n  if (!stableRef.current) {\n    stableRef.current = function (this: any) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-return, prefer-rest-params, @typescript-eslint/no-unsafe-argument\n      return latestRef.current.apply(this, arguments as any);\n    } as TCallback;\n  }\n\n  return stableRef.current;\n}\n\n/**\n * Render methods should be pure, especially when concurrency is used,\n * so we will throw this error if the callback is called while rendering.\n */\nfunction useEvent_shouldNotBeInvokedBeforeMount() {\n  throw new Error(\n    \"INVALID_USEEVENT_INVOCATION: the callback from useEvent cannot be invoked before the component has mounted.\",\n  );\n}\n","// Ripped from https://usehooks-ts.com/react-hook/use-fetch\nimport { useEffect, useReducer, useRef } from \"react\";\n\nimport { safeParseJSON } from \"@uploadthing/shared\";\n\ninterface State<T> {\n  data?: T;\n  error?: Error;\n}\n\ntype Cache<T> = Record<string, T>;\n\n// discriminated union type\ntype Action<T> =\n  | { type: \"loading\" }\n  | { type: \"fetched\"; payload: T }\n  | { type: \"error\"; payload: Error };\n\nfunction useFetch<T = unknown>(url?: string, options?: RequestInit): State<T> {\n  const cache = useRef<Cache<T>>({});\n\n  // Used to prevent state update if the component is unmounted\n  const cancelRequest = useRef<boolean>(false);\n\n  const initialState: State<T> = {\n    error: undefined,\n    data: undefined,\n  };\n\n  // Keep state logic separated\n  const fetchReducer = (state: State<T>, action: Action<T>): State<T> => {\n    switch (action.type) {\n      case \"loading\":\n        return { ...initialState };\n      case \"fetched\":\n        return { ...initialState, data: action.payload };\n      case \"error\":\n        return { ...initialState, error: action.payload };\n      default:\n        return state;\n    }\n  };\n\n  const [state, dispatch] = useReducer(fetchReducer, initialState);\n\n  useEffect(() => {\n    // Do nothing if the url is not given\n    if (!url) return;\n\n    cancelRequest.current = false;\n\n    const fetchData = async () => {\n      dispatch({ type: \"loading\" });\n\n      // If a cache exists for this url, return it\n      if (cache.current[url]) {\n        dispatch({ type: \"fetched\", payload: cache.current[url] });\n        return;\n      }\n\n      try {\n        const response = await fetch(url, options);\n        if (!response.ok) {\n          throw new Error(response.statusText);\n        }\n\n        const dataOrError = await safeParseJSON<T>(response);\n        if (dataOrError instanceof Error) {\n          throw dataOrError;\n        }\n\n        cache.current[url] = dataOrError;\n        if (cancelRequest.current) return;\n\n        dispatch({ type: \"fetched\", payload: dataOrError });\n      } catch (error) {\n        if (cancelRequest.current) return;\n\n        dispatch({ type: \"error\", payload: error as Error });\n      }\n    };\n\n    void fetchData();\n\n    // Use the cleanup function for avoiding a possibly...\n    // ...state update after the component was unmounted\n    return () => {\n      cancelRequest.current = true;\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [url]);\n\n  return state;\n}\n\nexport default useFetch;\n","export function getFilesFromClipboardEvent(event: ClipboardEvent) {\n  const dataTransferItems = event.clipboardData?.items;\n  if (!dataTransferItems) return;\n\n  const files = Array.from(dataTransferItems).reduce<File[]>((acc, curr) => {\n    const f = curr.getAsFile();\n    return f ? [...acc, f] : acc;\n  }, []);\n\n  return files;\n}\n\nexport function Spinner() {\n  return (\n    <svg\n      className=\"z-10 block h-5 w-5 animate-spin align-middle text-white\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      fill=\"none\"\n      viewBox=\"0 0 576 512\"\n    >\n      <path\n        fill=\"currentColor\"\n        d=\"M256 32C256 14.33 270.3 0 288 0C429.4 0 544 114.6 544 256C544 302.6 531.5 346.4 509.7 384C500.9 399.3 481.3 404.6 465.1 395.7C450.7 386.9 445.5 367.3 454.3 351.1C470.6 323.8 480 291 480 255.1C480 149.1 394 63.1 288 63.1C270.3 63.1 256 49.67 256 31.1V32z\"\n      />\n    </svg>\n  );\n}\n\nexport const progressWidths: Record<number, string> = {\n  0: \"after:w-0\",\n  10: \"after:w-[10%]\",\n  20: \"after:w-[20%]\",\n  30: \"after:w-[30%]\",\n  40: \"after:w-[40%]\",\n  50: \"after:w-[50%]\",\n  60: \"after:w-[60%]\",\n  70: \"after:w-[70%]\",\n  80: \"after:w-[80%]\",\n  90: \"after:w-[90%]\",\n  100: \"after:w-[100%]\",\n};\n","import { useCallback, useEffect, useState } from \"react\";\nimport { twMerge } from \"tailwind-merge\";\n\nimport { useDropzone } from \"@uploadthing/dropzone/react\";\nimport {\n  allowedContentTextLabelGenerator,\n  classNames,\n  contentFieldToContent,\n  generateClientDropzoneAccept,\n  generatePermittedFileTypes,\n  resolveMaybeUrlArg,\n  styleFieldToClassName,\n  styleFieldToCssObject,\n} from \"uploadthing/client\";\nimport type { ContentField, StyleField } from \"uploadthing/client\";\nimport type { ErrorMessage, FileRouter } from \"uploadthing/server\";\n\nimport type { UploadthingComponentProps } from \"../types\";\nimport { INTERNAL_uploadthingHookGen } from \"../useUploadThing\";\nimport { getFilesFromClipboardEvent, progressWidths, Spinner } from \"./shared\";\n\ntype DropzoneStyleFieldCallbackArgs = {\n  __runtime: \"react\";\n  ready: boolean;\n  isUploading: boolean;\n  uploadProgress: number;\n  fileTypes: string[];\n  isDragActive: boolean;\n};\n\nexport type UploadDropzoneProps<\n  TRouter extends FileRouter,\n  TEndpoint extends keyof TRouter,\n> = UploadthingComponentProps<TRouter, TEndpoint> & {\n  appearance?: {\n    container?: StyleField<DropzoneStyleFieldCallbackArgs>;\n    uploadIcon?: StyleField<DropzoneStyleFieldCallbackArgs>;\n    label?: StyleField<DropzoneStyleFieldCallbackArgs>;\n    allowedContent?: StyleField<DropzoneStyleFieldCallbackArgs>;\n    button?: StyleField<DropzoneStyleFieldCallbackArgs>;\n  };\n  content?: {\n    uploadIcon?: ContentField<DropzoneStyleFieldCallbackArgs>;\n    label?: ContentField<DropzoneStyleFieldCallbackArgs>;\n    allowedContent?: ContentField<DropzoneStyleFieldCallbackArgs>;\n    button?: ContentField<DropzoneStyleFieldCallbackArgs>;\n  };\n  className?: string;\n};\n\nexport function UploadDropzone<\n  TRouter extends FileRouter,\n  TEndpoint extends keyof TRouter,\n>(\n  props: FileRouter extends TRouter\n    ? ErrorMessage<\"You forgot to pass the generic\">\n    : UploadDropzoneProps<TRouter, TEndpoint>,\n) {\n  // Cast back to UploadthingComponentProps<TRouter> to get the correct type\n  // since the ErrorMessage messes it up otherwise\n  const $props = props as unknown as UploadDropzoneProps<TRouter, TEndpoint> & {\n    // props not exposed on public type\n    // Allow to set internal state for testing\n    __internal_state?: \"readying\" | \"ready\" | \"uploading\";\n    // Allow to set upload progress for testing\n    __internal_upload_progress?: number;\n    // Allow to set ready explicitly and independently of internal state\n    __internal_ready?: boolean;\n    // Allow to show the button even if no files were added\n    __internal_show_button?: boolean;\n    // Allow to disable the button\n    __internal_button_disabled?: boolean;\n    // Allow to disable the dropzone\n    __internal_dropzone_disabled?: boolean;\n  };\n  const { mode = \"manual\", appendOnPaste = false } = $props.config ?? {};\n\n  const useUploadThing = INTERNAL_uploadthingHookGen<TRouter>({\n    url: resolveMaybeUrlArg($props.url),\n  });\n\n  const [files, setFiles] = useState<File[]>([]);\n\n  const [uploadProgressState, setUploadProgress] = useState(\n    $props.__internal_upload_progress ?? 0,\n  );\n  const uploadProgress =\n    $props.__internal_upload_progress ?? uploadProgressState;\n  const { startUpload, isUploading, permittedFileInfo } = useUploadThing(\n    $props.endpoint,\n    {\n      onClientUploadComplete: (res) => {\n        setFiles([]);\n        $props.onClientUploadComplete?.(res);\n        setUploadProgress(0);\n      },\n      onUploadProgress: (p) => {\n        setUploadProgress(p);\n        $props.onUploadProgress?.(p);\n      },\n      onUploadError: $props.onUploadError,\n      onUploadBegin: $props.onUploadBegin,\n      onBeforeUploadBegin: $props.onBeforeUploadBegin,\n    },\n  );\n\n  const { fileTypes } = generatePermittedFileTypes(permittedFileInfo?.config);\n\n  const onDrop = useCallback(\n    (acceptedFiles: File[]) => {\n      setFiles(acceptedFiles);\n\n      // If mode is auto, start upload immediately\n      if (mode === \"auto\") {\n        const input = \"input\" in $props ? $props.input : undefined;\n        void startUpload(acceptedFiles, input);\n        return;\n      }\n    },\n    [$props, mode, startUpload],\n  );\n\n  const { getRootProps, getInputProps, isDragActive, rootRef } = useDropzone({\n    onDrop,\n    accept: fileTypes ? generateClientDropzoneAccept(fileTypes) : undefined,\n    disabled: $props.__internal_dropzone_disabled,\n  });\n\n  const ready =\n    $props.__internal_ready ??\n    ($props.__internal_state === \"ready\" || fileTypes.length > 0);\n\n  const onUploadClick = (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n  ) => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (!files) return;\n\n    const input = \"input\" in $props ? $props.input : undefined;\n    void startUpload(files, input);\n  };\n\n  useEffect(() => {\n    const handlePaste = (event: ClipboardEvent) => {\n      if (!appendOnPaste) return;\n      if (document.activeElement !== rootRef.current) return;\n\n      const pastedFiles = getFilesFromClipboardEvent(event);\n      if (!pastedFiles) return;\n\n      setFiles((prev) => [...prev, ...pastedFiles]);\n\n      if (mode === \"auto\") {\n        const input = \"input\" in $props ? $props.input : undefined;\n        void startUpload(files, input);\n      }\n    };\n\n    window.addEventListener(\"paste\", handlePaste);\n    return () => {\n      window.removeEventListener(\"paste\", handlePaste);\n    };\n  }, [startUpload, $props, appendOnPaste, mode, fileTypes, rootRef, files]);\n\n  const styleFieldArg = {\n    fileTypes,\n    isDragActive,\n    isUploading,\n    ready,\n    uploadProgress,\n  } as DropzoneStyleFieldCallbackArgs;\n\n  const state = (() => {\n    if ($props.__internal_state) return $props.__internal_state;\n    if (!ready) return \"readying\";\n    if (ready && !isUploading) return \"ready\";\n\n    return \"uploading\";\n  })();\n\n  return (\n    <div\n      className={twMerge(\n        \"mt-2 flex flex-col items-center justify-center rounded-lg border border-dashed border-gray-900/25 px-6 py-10 text-center\",\n        isDragActive && \"bg-blue-600/10\",\n        $props.className,\n        styleFieldToClassName($props.appearance?.container, styleFieldArg),\n      )}\n      {...getRootProps()}\n      style={styleFieldToCssObject($props.appearance?.container, styleFieldArg)}\n      data-state={state}\n    >\n      {contentFieldToContent($props.content?.uploadIcon, styleFieldArg) ?? (\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 20 20\"\n          className={twMerge(\n            \"mx-auto block h-12 w-12 align-middle text-gray-400\",\n            styleFieldToClassName($props.appearance?.uploadIcon, styleFieldArg),\n          )}\n          style={styleFieldToCssObject(\n            $props.appearance?.uploadIcon,\n            styleFieldArg,\n          )}\n          data-ut-element=\"upload-icon\"\n          data-state={state}\n        >\n          <path\n            fill=\"currentColor\"\n            fillRule=\"evenodd\"\n            d=\"M5.5 17a4.5 4.5 0 0 1-1.44-8.765a4.5 4.5 0 0 1 8.302-3.046a3.5 3.5 0 0 1 4.504 4.272A4 4 0 0 1 15 17H5.5Zm3.75-2.75a.75.75 0 0 0 1.5 0V9.66l1.95 2.1a.75.75 0 1 0 1.1-1.02l-3.25-3.5a.75.75 0 0 0-1.1 0l-3.25 3.5a.75.75 0 1 0 1.1 1.02l1.95-2.1v4.59Z\"\n            clipRule=\"evenodd\"\n          ></path>\n        </svg>\n      )}\n      <label\n        htmlFor=\"file-upload\"\n        className={twMerge(\n          classNames(\n            \"relative mt-4 flex w-64 cursor-pointer items-center justify-center text-sm font-semibold leading-6 text-gray-600 focus-within:outline-none focus-within:ring-2 focus-within:ring-blue-600 focus-within:ring-offset-2 hover:text-blue-500\",\n            ready ? \"text-blue-600\" : \"text-gray-500\",\n          ),\n          styleFieldToClassName($props.appearance?.label, styleFieldArg),\n        )}\n        style={styleFieldToCssObject($props.appearance?.label, styleFieldArg)}\n        data-ut-element=\"label\"\n        data-state={state}\n      >\n        {contentFieldToContent($props.content?.label, styleFieldArg) ??\n          (ready ? `Choose files or drag and drop` : `Loading...`)}\n        <input className=\"sr-only\" {...getInputProps()} />\n      </label>\n      <div\n        className={twMerge(\n          \"m-0 h-[1.25rem] text-xs leading-5 text-gray-600\",\n          styleFieldToClassName(\n            $props.appearance?.allowedContent,\n            styleFieldArg,\n          ),\n        )}\n        style={styleFieldToCssObject(\n          $props.appearance?.allowedContent,\n          styleFieldArg,\n        )}\n        data-ut-element=\"allowed-content\"\n        data-state={state}\n      >\n        {contentFieldToContent($props.content?.allowedContent, styleFieldArg) ??\n          allowedContentTextLabelGenerator(permittedFileInfo?.config)}\n      </div>\n      {($props.__internal_show_button ?? files.length > 0) && (\n        <button\n          className={twMerge(\n            classNames(\n              \"relative mt-4 flex h-10 w-36 items-center justify-center overflow-hidden rounded-md text-white after:transition-[width] after:duration-500\",\n              state === \"uploading\"\n                ? `bg-blue-400 after:absolute after:left-0 after:h-full after:bg-blue-600 ${progressWidths[uploadProgress]}`\n                : \"bg-blue-600\",\n            ),\n            styleFieldToClassName($props.appearance?.button, styleFieldArg),\n          )}\n          style={styleFieldToCssObject(\n            $props.appearance?.button,\n            styleFieldArg,\n          )}\n          onClick={onUploadClick}\n          data-ut-element=\"button\"\n          data-state={state}\n          disabled={$props.__internal_button_disabled ?? state === \"uploading\"}\n        >\n          {contentFieldToContent($props.content?.button, styleFieldArg) ??\n            (state === \"uploading\" ? (\n              <Spinner />\n            ) : (\n              `Upload ${files.length} file${files.length === 1 ? \"\" : \"s\"}`\n            ))}\n        </button>\n      )}\n    </div>\n  );\n}\n","import type { ErrorMessage, FileRouter } from \"uploadthing/server\";\n\nimport type { UploadthingComponentProps } from \"../types\";\nimport { UploadButton } from \"./button\";\nimport { UploadDropzone } from \"./dropzone\";\n\nexport function Uploader<\n  TRouter extends FileRouter,\n  TEndpoint extends keyof TRouter,\n>(\n  props: FileRouter extends TRouter\n    ? ErrorMessage<\"You forgot to pass the generic\">\n    : UploadthingComponentProps<TRouter, TEndpoint>,\n) {\n  return (\n    <>\n      <div className=\"flex flex-col items-center justify-center gap-4\">\n        <span className=\"text-center text-4xl font-bold\">\n          {`Upload a file using a button:`}\n        </span>\n        {/* @ts-expect-error - this is validated above */}\n        <UploadButton<TRouter> {...props} />\n      </div>\n      <div className=\"flex flex-col items-center justify-center gap-4\">\n        <span className=\"text-center text-4xl font-bold\">\n          {`...or using a dropzone:`}\n        </span>\n        {/* @ts-expect-error - this is validated above */}\n        <UploadDropzone<TRouter> {...props} />\n      </div>\n    </>\n  );\n}\n"],"mappings":"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","names":["import_client","import_react","import_client","import_react","import_shared","React","import_react","state","_a","import_jsx_runtime","_a","fileTypes","_b","_c","import_react","import_tailwind_merge","import_client","import_jsx_runtime","_a","import_jsx_runtime","import_jsx_runtime","import_react"]}